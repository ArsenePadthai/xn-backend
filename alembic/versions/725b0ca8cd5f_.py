"""empty message

Revision ID: 725b0ca8cd5f
Revises: 81c74be661a7
Create Date: 2019-11-11 13:07:55.305339

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '725b0ca8cd5f'
down_revision = '81c74be661a7'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('relay_ibfk_1', 'relay', type_='foreignkey')
    op.drop_column('relay', 'latest_record_id')
    op.drop_table('relay_status')
    op.drop_constraint('air_conditioner_ibfk_1', 'air_conditioner', type_='foreignkey')
    op.drop_column('air_conditioner', 'id')
    op.drop_column('air_conditioner', 'mode')
    op.drop_column('air_conditioner', 'hum')
    op.drop_column('air_conditioner', 'temp')
    op.drop_column('air_conditioner', 'auto_controller_id')

    op.add_column('air_conditioner', sa.Column('ac_on', sa.BOOLEAN(), nullable=True))
    op.add_column('air_conditioner', sa.Column('desired_mode', sa.SmallInteger(), nullable=True))
    op.add_column('air_conditioner', sa.Column('desired_speed', sa.Float(), nullable=True))
    op.add_column('air_conditioner', sa.Column('desired_temperature', sa.Float(), nullable=True))
    op.add_column('air_conditioner', sa.Column('device_index_code', sa.Unicode(length=50), nullable=False))
    op.add_column('air_conditioner', sa.Column('if_online', sa.BOOLEAN(), nullable=True))
    op.add_column('air_conditioner', sa.Column('locator_id', sa.Unicode(length=50), nullable=True))
    op.add_column('air_conditioner', sa.Column('temperature', sa.Float(), nullable=True))
    op.create_foreign_key(None, 'air_conditioner', 'locators',
                          ['locator_id'], ['internal_code'], ondelete='SET NULL')

    op.drop_constraint('tracking_devices_ibfk_2', 'tracking_devices', type_='foreignkey')
    op.create_foreign_key(None, 'tracking_devices', 'acs_records', ['latest_acs_record_id'], ['id'], ondelete='SET NULL')

    op.drop_constraint('aqi_sensors_ibfk_3', 'aqi_sensors', type_='foreignkey')
    op.create_foreign_key(None, 'aqi_sensors', 'aqi_values', ['latest_record_id'], ['id'], ondelete='SET NULL')
    op.drop_column('aqi_sensors', 'switch_id')
    op.drop_constraint('elevators_ibfk_2', 'elevators', type_='foreignkey')
    op.create_foreign_key(None, 'elevators', 'elevator_status', ['latest_record_id'], ['id'], ondelete='SET NULL')
    op.drop_constraint('fire_alarm_sensors_ibfk_2', 'fire_alarm_sensors', type_='foreignkey')
    op.create_foreign_key(None, 'fire_alarm_sensors', 'fire_alarm_status', ['latest_record_id'], ['id'], ondelete='SET NULL')
    op.drop_constraint('ir_sensors_ibfk_3', 'ir_sensors', type_='foreignkey')
    op.create_foreign_key(None, 'ir_sensors', 'ir_sensor_status', ['latest_record_id'], ['id'], ondelete='SET NULL')
    op.drop_constraint('lux_sensors_ibfk_3', 'lux_sensors', type_='foreignkey')
    op.create_foreign_key(None, 'lux_sensors', 'lux_values', ['latest_record_id'], ['id'], ondelete='SET NULL')
    op.drop_constraint('mantunci_box_ibfk_1', 'mantunci_box', type_='foreignkey')
    op.create_foreign_key(None, 'mantunci_box', 'box_alarms', ['latest_alarm_id'], ['id'], ondelete='SET NULL')
    op.drop_constraint('s3_fc20_ibfk_3', 's3_fc20', type_='foreignkey')
    op.create_foreign_key(None, 's3_fc20', 's3_fc20_records', ['latest_record_id'], ['id'], ondelete='SET NULL')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    return
    # ### end Alembic commands ###
