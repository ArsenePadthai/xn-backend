"""empty message

Revision ID: c9dc674bd9e1
Revises: 1db8ea5ae57f
Create Date: 2019-07-31 19:00:42.351892

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'c9dc674bd9e1'
down_revision = '1db8ea5ae57f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('aqi_event_count',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('aqi_id', sa.Integer(), nullable=True),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['aqi_id'], ['aqi_sensors.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ir_count',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ir_id', sa.Integer(), nullable=True),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['ir_id'], ['ir_sensors.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lux_event_count',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lux_id', sa.Integer(), nullable=True),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['lux_id'], ['lux_sensors.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('switch_flag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('switch_id', sa.Integer(), nullable=True),
    sa.Column('latest_status', sa.BOOLEAN(), nullable=True),
    sa.Column('manual', sa.BOOLEAN(), nullable=True),
    sa.Column('touch', sa.BOOLEAN(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('aqi_sensors', sa.Column('switch_id', sa.Integer(), nullable=True))
    op.add_column('aqi_sensors', sa.Column('tcp_config_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'aqi_sensors', 'switches', ['switch_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'aqi_sensors', 'tcp_config', ['tcp_config_id'], ['id'], ondelete='set null')
    op.alter_column('circuit_records', 'control',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.BOOLEAN(),
               existing_nullable=True)
    op.alter_column('circuit_records', 'enable_netctr',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.BOOLEAN(),
               existing_nullable=True)
    op.alter_column('circuit_records', 'oc',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.BOOLEAN(),
               existing_nullable=True)
    op.alter_column('circuit_records', 'online',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.BOOLEAN(),
               existing_nullable=True)
    op.alter_column('circuit_records', 'validity',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.BOOLEAN(),
               existing_nullable=True)
    op.alter_column('circuit_records', 'visibility',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.BOOLEAN(),
               existing_nullable=True)
    op.alter_column('ir_sensor_status', 'status',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.BOOLEAN(),
               existing_nullable=True)
    op.add_column('lux_sensors', sa.Column('tcp_config_id', sa.Integer(), nullable=True))
    op.drop_constraint('lux_sensors_ibfk_2', 'lux_sensors', type_='foreignkey')
    op.create_foreign_key(None, 'lux_sensors', 'tcp_config', ['tcp_config_id'], ['id'], ondelete='set null')
    op.drop_column('lux_sensors', 'ip_config_id')
    op.add_column('switches', sa.Column('aqi_id', sa.Integer(), nullable=True))
    op.add_column('switches', sa.Column('control_type', sa.SmallInteger(), nullable=True))
    op.add_column('switches', sa.Column('ir_id', sa.Integer(), nullable=True))
    op.add_column('switches', sa.Column('lux_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'switches', 'ir_sensors', ['ir_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'switches', 'aqi_sensors', ['aqi_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'switches', 'lux_sensors', ['lux_id'], ['id'], ondelete='SET NULL')
    op.alter_column('user_logins', 'password',
               existing_type=mysql.VARCHAR(length=100),
               type_=sa.String(length=200),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user_logins', 'password',
               existing_type=sa.String(length=200),
               type_=mysql.VARCHAR(length=100),
               existing_nullable=True)
    op.drop_constraint(None, 'switches', type_='foreignkey')
    op.drop_constraint(None, 'switches', type_='foreignkey')
    op.drop_constraint(None, 'switches', type_='foreignkey')
    op.drop_column('switches', 'lux_id')
    op.drop_column('switches', 'ir_id')
    op.drop_column('switches', 'control_type')
    op.drop_column('switches', 'aqi_id')
    op.add_column('lux_sensors', sa.Column('ip_config_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'lux_sensors', type_='foreignkey')
    op.create_foreign_key('lux_sensors_ibfk_2', 'lux_sensors', 'tcp_config', ['ip_config_id'], ['id'], ondelete='SET NULL')
    op.drop_column('lux_sensors', 'tcp_config_id')
    op.alter_column('ir_sensor_status', 'status',
               existing_type=sa.BOOLEAN(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('circuit_records', 'visibility',
               existing_type=sa.BOOLEAN(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('circuit_records', 'validity',
               existing_type=sa.BOOLEAN(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('circuit_records', 'online',
               existing_type=sa.BOOLEAN(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('circuit_records', 'oc',
               existing_type=sa.BOOLEAN(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('circuit_records', 'enable_netctr',
               existing_type=sa.BOOLEAN(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('circuit_records', 'control',
               existing_type=sa.BOOLEAN(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.drop_constraint(None, 'aqi_sensors', type_='foreignkey')
    op.drop_constraint(None, 'aqi_sensors', type_='foreignkey')
    op.drop_column('aqi_sensors', 'tcp_config_id')
    op.drop_column('aqi_sensors', 'switch_id')
    op.drop_table('switch_flag')
    op.drop_table('lux_event_count')
    op.drop_table('ir_count')
    op.drop_table('aqi_event_count')
    # ### end Alembic commands ###
